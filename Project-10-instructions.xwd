{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red43\green49\blue55;\red255\green255\blue255;\red69\green80\blue83;
\red39\green90\blue135;\red34\green38\blue43;\red59\green68\blue70;\red247\green249\blue249;}
{\*\expandedcolortbl;;\cssrgb\c21961\c25098\c27843;\cssrgb\c100000\c100000\c100000;\cssrgb\c34118\c38824\c40000;
\cssrgb\c19608\c43137\c60000;\cssrgb\c17647\c20000\c22353;\cssrgb\c29412\c33725\c34510;\cssrgb\c97647\c98039\c98039;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid3\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid102\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid103\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
{\info
{\keywords fitsPagesWidth=1}}\paperw11900\paperh16840\margl1008\margr1008\margt1008\vieww18700\viewh15220\viewkind1\viewscale150
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc\partightenfactor0

\f0\fs24 \cf0 Project-10-instructions\
\
\pard\pardeftab720\sl500\sa200\partightenfactor0

\fs40 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 roject Instructions\cb1 \
\pard\pardeftab720\sl500\sa400\partightenfactor0

\fs28 \cf4 \cb3 \strokec4 To complete this project, follow the instructions below. If you get stuck, ask a question on Slack or in the Treehouse Community.\cb1 \
\pard\pardeftab720\sl340\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://teamtreehouse.com/projects/full-stack-app-with-react-and-a-rest-api#"}}{\fldrslt \cf5 \cb3 \strokec5 \'a016 steps}}\cf5 \strokec5 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Create your React project\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Use the create-react-app tool to set up and create your React project in a folder named\'a0\cf7 \strokec7 client\cf4 \strokec4 .\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 To do this, run the command\'a0\cf7 \strokec7 npx create-react-app client\cf4 \strokec4 \'a0from the root of your repo.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 NOTE: npx is not a typo \'97 it\'92s a package runner tool that comes with npm 5.2+.\cb1 \uc0\u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Set up your REST API\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Add a folder named\'a0\cf7 \strokec7 api\cf4 \strokec4 \'a0to the root of your repo.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Copy the REST API Express application from your unit 9 project into the\'a0\cf7 \strokec7 api\cf4 \strokec4 \'a0folder.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Add CORS support to your REST API\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 When developing your React application, you'll be using the create-react-app development server, which will host your application (by default) at\'a0\cf7 \strokec7 http://localhost:3000/\cf4 \strokec4 . Your REST API, will be hosted separately from your React application at\'a0\cf7 \strokec7 http://localhost:5000/\cf4 \strokec4 . While both the React and REST API applications will be using the same hostname,\'a0\cf7 \strokec7 localhost\cf4 \strokec4 , their port numbers differ, so the browser will treat them as separate origins or domains.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 To successfully make a request from the React application's domain to the REST API's domain, you'll need to update your REST API application to support cross-origin resource sharing or CORS (see\'a0{\field{\*\fldinst{HYPERLINK "https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"}}{\fldrslt \cf5 \strokec5 this page on MDN}}\'a0for more information about CORS).\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Add a middleware function to set the appropriate headers to support CORS.\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Alternatively, you can install and configure the\'a0\cf7 \strokec7 cors\cf4 \strokec4 \'a0npm package ({\field{\*\fldinst{HYPERLINK "https://www.npmjs.com/package/cors"}}{\fldrslt \cf5 \strokec5 https://www.npmjs.com/package/cors}}).\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Test calling your REST API from your React application\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Before going any further, let's ensure that your React and REST API applications are setup correctly and you can successfully call your REST API from your React application.\cb1 \
\ls1\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Update the React\'a0\cf7 \strokec7 App\cf4 \strokec4 \'a0component (\cf7 \strokec7 src/App.js\cf4 \strokec4 \'a0file) to call the REST API to get a list of courses and render the results.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 We're just confirming the setup of the applications, so just render the list of course titles using some simple markup (e.g. an unordered list or set of divs).\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Open a terminal or command window and start your REST API application.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Browse to the\'a0\cf7 \strokec7 api\cf4 \strokec4 \'a0folder and run the command\'a0\cf7 \strokec7 npm start\cf4 \strokec4 .\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Once you've started the REST API application, you can typically just leave the app running in the background.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Open another terminal or command window and start your React application.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Browse to the\'a0\cf7 \strokec7 client\cf4 \strokec4 \'a0folder and run the command\'a0\cf7 \strokec7 npm start\cf4 \strokec4 .\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 The create-react-app development server should start and open your application into your default browser. If the development server started but it didn't open in the browser, try manually browsing to it at\'a0\cf7 \strokec7 http://localhost:3000/\cf4 \strokec4 .\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Build your app components\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Use the provided HTML files (see the\'a0\cf7 \strokec7 markup\cf4 \strokec4 \'a0folder in the project files download) as a guide while you create the components for this project.\cb1 \
\ls1\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Use the\'a0\cf7 \strokec7 App\cf4 \strokec4 \'a0component (\cf7 \strokec7 src/App.js\cf4 \strokec4 \'a0file) that was generated by the create-react-app tool as your main container component.\cb1 \
\ls1\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Create the following stateful class components:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Courses\cf4 \strokec4 \'a0- This component provides the "Courses" screen by retrieving the list of courses from the REST API's\'a0\cf7 \strokec7 /api/courses\cf4 \strokec4 \'a0route and rendering a list of courses. Each course needs to link to its respective "Course Detail" screen. This component also renders a link to the "Create Course" screen.\cb1 \
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 CourseDetail\cf4 \strokec4 \'a0- This component provides the "Course Detail" screen by retrieving the detail for a course from the REST API's\'a0\cf7 \strokec7 /api/courses/:id\cf4 \strokec4 \'a0route and rendering the course. The component also renders a "Delete Course" button that when clicked should send a DELETE request to the REST API's\'a0\cf7 \strokec7 /api/courses/:id\cf4 \strokec4 \'a0route in order to delete a course. This component also renders an "Update Course" button for navigating to the "Update Course" screen.\cb1 \
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 UserSignIn\cf4 \strokec4 \'a0- This component provides the "Sign In" screen by rendering a form that allows a user to sign using their existing account information. The component also renders a "Sign In" button that when clicked signs in the user and a "Cancel" button that returns the user to the default route (i.e. the list of courses).\cb1 \
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 UserSignUp\cf4 \strokec4 \'a0- This component provides the "Sign Up" screen by rendering a form that allows a user to sign up by creating a new account. The component also renders a "Sign Up" button that when clicked sends a POST request to the REST API's\'a0\cf7 \strokec7 /api/users\cf4 \strokec4 \'a0route and signs in the user. This component also renders a "Cancel" button that returns the user to the default route (i.e. the list of courses).\cb1 \
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 CreateCourse\cf4 \strokec4 \'a0- This component provides the "Create Course" screen by rendering a form that allows a user to create a new course. The component also renders a "Create Course" button that when clicked sends a POST request to the REST API's\'a0\cf7 \strokec7 /api/courses\cf4 \strokec4 \'a0route. This component also renders a "Cancel" button that returns the user to the default route (i.e. the list of courses).\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 UpdateCourse\cf4 \strokec4 \'a0- This component provides the "Update Course" screen by rendering a form that allows a user to update one of their existing courses. The component also renders an "Update Course" button that when clicked sends a PUT request to the REST API's\'a0\cf7 \strokec7 /api/courses/:id\cf4 \strokec4 \'a0route. This component also renders a "Cancel" button that returns the user to the "Course Detail" screen.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Create the following stateless functional components:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Header\cf4 \strokec4 - Displays the top menu bar for the application and includes buttons for signing in and signing up (if there's not an authenticated user) or the user's first and last name and a button for signing out (if there's an authenticated user).\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 UserSignOut\cf4 \strokec4 \'a0- This component is a bit of an oddball as it doesn't render any visual elements. Instead, it signs out the authenticated user and redirects the user to the default route (i.e. the list of courses).\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Pro Tip:\'a0Resist the temptation to keep and manage the courses data as global state in the App component. Instead, allow the\'a0\cf7 \strokec7 Courses\cf4 \strokec4 \'a0and\'a0\cf7 \strokec7 CourseDetail\cf4 \strokec4 \'a0components to retrieve their data from the REST API when those components are mounted. Using this approach simplifies the management of the courses data and ensures that the data won't get out of sync with the REST API's persisted data.\cb1 \uc0\u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Set up your routes\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Install React Router and set up your\'a0\cf7 \strokec7 <Route>\cf4 \strokec4 \'a0and\'a0\cf7 \strokec7 <Link>\cf4 \strokec4 \'a0or\'a0\cf7 \strokec7 <NavLink>\cf4 \strokec4 \'a0components.\cb1 \
\ls1\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Clicking a link should navigate the user to the correct route, displaying the appropriate info.\cb1 \
\ls1\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 The current route should be reflected in the URL.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Your app should include the following routes (listed in the format\'a0\cf7 \strokec7 path\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 component\cf4 \strokec4 ):\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 Courses\cf4 \cb1 \strokec4 \
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /courses/create\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 CreateCourse\cf4 \cb1 \strokec4 \
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /courses/:id/update\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 UpdateCourse\cf4 \cb1 \strokec4 \
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /courses/:id\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 CourseDetail\cf4 \cb1 \strokec4 \
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /signin\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 UserSignIn\cf4 \cb1 \strokec4 \
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /signup\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 UserSignUp\cf4 \cb1 \strokec4 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /signout\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 UserSignOut\cf4 \cb1 \strokec4 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Add support for user authentication\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 To prepare for implementing user authentication (i.e. user sign in and sign out), determine where you'll manage your application's global state.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 One option, is to keep your global state in your\'a0\cf7 \strokec7 App\cf4 \strokec4 \'a0component. Using this approach, the authenticated user and the user sign in and sign out actions (i.e. methods) are made available throughout your application, by using props to pass references down through your component tree.\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Another option, is to manage your global state using the React Context API. Using this approach, the authenticated user and the user sign in and sign out actions (i.e. methods) are defined using a Context API\'a0\cf7 \strokec7 <Provider>\cf4 \strokec4 \'a0component and made available throughout your application using Context API\'a0\cf7 \strokec7 <Consumer>\cf4 \strokec4 \'a0components.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Create your\'a0\cf7 \strokec7 signIn()\cf4 \strokec4 \'a0method.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Your\'a0\cf7 \strokec7 signIn()\cf4 \strokec4 \'a0method should define\'a0\cf7 \strokec7 emailAddress\cf4 \strokec4 \'a0and\'a0\cf7 \strokec7 password\cf4 \strokec4 \'a0parameters.\cb1 \
\ls1\ilvl2\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 To authenticate the user, make a request to the REST API's\'a0\cf7 \strokec7 /users\cf4 \strokec4 \'a0endpoint, using the\'a0\cf7 \strokec7 emailAddress\cf4 \strokec4 \'a0and\'a0\cf7 \strokec7 password\cf4 \strokec4 \'a0parameter values to set an\'a0\cf7 \strokec7 Authorization\cf4 \strokec4 \'a0header on the request using the Basic Authentication scheme.\cb1 \
\ls1\ilvl2\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 If the request to the REST API succeeds (i.e. the server returns an "200 OK" HTTP status code), then you'll know that the supplied user credentials are valid. If the server returns a "401 Unauthorized" HTTP status code, then the supplied user credentials are invalid.\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 After validating the user's credentials, persist the returned user record and the user's password in the global state. Doing this will allow you to create and set the appropriate\'a0\cf7 \strokec7 Authorization\cf4 \strokec4 \'a0header on future REST API requests that require authentication.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Create your\'a0\cf7 \strokec7 signOut()\cf4 \strokec4 \'a0method.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 The\'a0\cf7 \strokec7 signOut()\cf4 \strokec4 \'a0method should remove the authenticated user and password from the global state.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Configure your protected routes\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Define a higher-order component (HOC) named\'a0\cf7 \strokec7 PrivateRoute\cf4 \strokec4 \'a0for configuring protected routes (i.e. routes that require authentication).\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Use a stateless functional component to wrap an instance of the\'a0\cf7 \strokec7 <Route>\cf4 \strokec4 \'a0component.\cb1 \
\ls1\ilvl2\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Use the\'a0\cf7 \strokec7 <Route>\cf4 \strokec4 \'a0component's\'a0\cf7 \strokec7 render\cf4 \strokec4 \'a0property to define a function that renders the component associated with the private route if there's an authenticated user or redirects the user to the\'a0\cf7 \strokec7 /signin\cf4 \strokec4 \'a0route if there's not an authenticated user.\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 For an example of how this is done, see\'a0{\field{\*\fldinst{HYPERLINK "https://reacttraining.com/react-router/web/example/auth-workflow"}}{\fldrslt \cf5 \strokec5 this page}}\'a0in the React Router documentation.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Update the following routes to use the\'a0\cf7 \strokec7 PrivateRoute\cf4 \strokec4 \'a0component:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /courses/create\cf4 \cb1 \strokec4 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /courses/:id/update\cf4 \cb1 \strokec4 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Restrict access to updating and deleting courses\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 On the "Course Detail" screen, add rendering logic so that the "Update Course" and "Delete Course" buttons only display if:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 There's an authenticated user.\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 And the authenticated user's ID matches that of the user who owns the course.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Display validation errors\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Update the "Sign Up", "Create Course", and "Update Course" screens to display validation errors returned from the REST API.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 See the\'a0\cf7 \strokec7 create-course.html\cf4 \strokec4 \'a0file in the\'a0\cf7 \strokec7 markup\cf4 \strokec4 \'a0project files folder.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Add support for rendering markdown formatted text\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Use npm to install the\'a0\cf7 \strokec7 react-markdown\cf4 \strokec4 \'a0package (see\'a0{\field{\*\fldinst{HYPERLINK "https://www.npmjs.com/package/react-markdown"}}{\fldrslt \cf5 \strokec5 https://www.npmjs.com/package/react-markdown}}\'a0for more information).\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 On the "Course Detail" screen, use the\'a0\cf7 \strokec7 <ReactMarkdown>\cf4 \strokec4 \'a0component to render the course\'a0\cf7 \strokec7 description\cf4 \strokec4 \'a0and\'a0\cf7 \strokec7 materialsNeeded\cf4 \strokec4 \'a0properties as markdown formatted text.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Add HTML and CSS\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Use the HTML files contained within the\'a0\cf7 \strokec7 markup\cf4 \strokec4 \'a0project files folder as a guide while you create the components for this project.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Use the CSS contained within the\'a0\cf7 \strokec7 global.css\cf4 \strokec4 \'a0file in the\'a0\cf7 \strokec7 styles\cf4 \strokec4 \'a0project files folder for your application's styles.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Free free to experiment with modifying the colors, background colors, or fonts in order to personalize your application.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Add good code comments\cb1 \uc0\u8232 \cf4 \strokec4 \uc0\u8232 \
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Cross-Browser consistency:\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Google Chrome has become the default development browser for most developers. With such a selection of browsers for users to choose from, it's a good idea to get in the habit of testing your projects in all modern browsers.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Review the "How you'll be graded" section.\cb1 \uc0\u8232 \cf4 \strokec4 \uc0\u8232 \
\ls1\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Quality Assurance and Project Submission Checklist\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Perform QA testing on your project, checking for bugs, user experience and edge cases.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Check off all of the items on the\'a0{\field{\*\fldinst{HYPERLINK "http://treehouse-techdegree.s3.amazonaws.com/Student-Project-Submission-Checklist.pdf"}}{\fldrslt \cf5 \strokec5 Student Project Submission Checklist}}.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\sa600\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \cb3 NOTE: Seeking assistance\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 If you're feeling stuck or having trouble with this project\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls1\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Reach out to the team on Slack.\cb1 \
\ls1\ilvl2\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Review material in the unit.\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls1\ilvl2\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Practice your Google skills by finding different ways to ask the questions you have, paying close attention to the sort of results you get back depending on how your questions are worded.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls1\ilvl0\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 NOTE: What you submit is what will get reviewed.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls1\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 When you submit your project, a snapshot is taken of your repository, and that is what the reviewer will see. Consequently, any changes you make to your repo after you submit will not be seen by the reviewer. So before you submit, it's a smart idea to do a final check to make sure everything in your repo is exactly what you want to submit.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\sa600\partightenfactor0
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \u8232 \
\pard\pardeftab720\sl1200\partightenfactor0
\cf5 \strokec5 \
\pard\pardeftab720\sl500\sa200\partightenfactor0

\fs40 \cf2 \cb3 \strokec2 Extra Credit\cb1 \
\pard\pardeftab720\sl500\sa400\partightenfactor0

\fs28 \cf4 \cb3 \strokec4 To get an "exceeds" rating, complete all of the steps below:\cb1 \
\pard\pardeftab720\sl340\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://teamtreehouse.com/projects/full-stack-app-with-react-and-a-rest-api#"}}{\fldrslt \cf5 \cb3 \strokec5 \'a03 steps}}\cf5 \strokec5 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls2\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Display user friendly messages\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls2\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 A well-designed application will display user-friendly messages when things go wrong. For example, when a requested page can't be found.\cb1 \
\ls2\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Create the following stateless functional components:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls2\ilvl2\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 NotFound\cf4 \strokec4 \'a0- Display a message letting the user know that the requested page can't be found.\cb1 \
\ls2\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Forbidden\cf4 \strokec4 \'a0- Displays a message letting the user know that they can't access the requested page.\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls2\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 UnhandledError\cf4 \strokec4 \'a0- Display a message letting the user know that an unexpected error has occurred.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls2\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Add the following routes (listed in the format\'a0\cf7 \strokec7 path\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 component\cf4 \strokec4 ):\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\sa200\partightenfactor0
\ls2\ilvl2\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /notfound\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 NotFound\cf4 \cb1 \strokec4 \
\ls2\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /forbidden\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 Forbidden\cf4 \cb1 \strokec4 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls2\ilvl2\cf7 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 /error\cf4 \strokec4 \'a0-\'a0\cf7 \strokec7 UnhandledError\cf4 \cb1 \strokec4 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls2\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Update the\'a0\cf7 \strokec7 CourseDetail\cf4 \strokec4 \'a0and\'a0\cf7 \strokec7 UpdateCourse\cf4 \strokec4 \'a0components to redirect users to the\'a0\cf7 \strokec7 /notfound\cf4 \strokec4 \'a0path if the requested course isn't returned from the REST API.\cb1 \
\ls2\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Update your React Router configuration so that if a route isn't matched the\'a0\cf7 \strokec7 NotFound\cf4 \strokec4 \'a0component will be rendered.\cb1 \
\ls2\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Update the\'a0\cf7 \strokec7 UpdateCourse\cf4 \strokec4 \'a0component to redirect users to the\'a0\cf7 \strokec7 /forbidden\cf4 \strokec4 \'a0path if the requested course isn't owned by the authenticated user.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls2\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Throughout your application, redirect users to the\'a0\cf7 \strokec7 /error\cf4 \strokec4 \'a0path when requests to the REST API return a "500 Internal Server Error" HTTP status code.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls2\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls2\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Persist user credentials\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls2\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 After successfully authenticating a user, persist their credentials using an HTTP cookie or local storage so that the user's authenticated state is maintained even if the application is reloaded or loaded into a new browser tab.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls2\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls2\ilvl0\cf6 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Redirecting the user after successfully signing in\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls2\ilvl1\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 After a user successfully signs in, redirect them back to the previous screen (whatever that happens to be).\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl420\partightenfactor0
\ls2\ilvl2\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 For example, if a user attempts to view the "Create Course" screen before they've signed in, they'll be redirected to the "Sign In" screen. After the user has successfully signed in, redirect them to the "Create Course" screen.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\sa600\partightenfactor0
\ls2\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200\partightenfactor0
\ls2\ilvl0\cf4 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 NOTE: Getting an "Exceed Expectations" grade.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\sa200\partightenfactor0
\ls2\ilvl1\cf4 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 See the rubric in the "How You'll Be Graded" tab above for details on what you need to receive an "Exceed Expectations" grade.\cb1 \
\ls2\ilvl1\cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Passing grades are final. If you try for the "Exceeds Expectations" grade, but miss an item and receive a \'93Meets Expectations\'94 grade, you won\'92t get a second chance. Exceptions can be made for items that have been misgraded in review.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420\partightenfactor0
\ls2\ilvl1\cf4 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Always mention in the comments of your submission or any resubmission, what grade you are going for. Some students want their project to be rejected if they do not meet all Exceeds Expectations Requirements, others will try for all the "exceeds" requirement but do not mind if they pass with a Meets Expectations grade. Leaving a comment in your submission will help the reviewer understand which grade you are specifically going for\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls2\ilvl0\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8232 \cb8 \
}{\*\shppict {\pict \jpegblipPageWidth pageWidth = 494.200012}}{\*\shppict {\pict \jpegHeaderFooterString headerStyle = 0, headerPageFormat = 0, headerStartNumber = 0, headerIncludeNumberOnFirstPage = 0, footerStyle = 0, footerPageFormat = 0, footerStartNumber = 0, footerIncludeNumberOnFirstPage = 0,}}